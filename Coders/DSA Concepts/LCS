#include <stdio.h>
#include <string.h>
#define inf 9999

int L[20][20];
char X[20], Y[20], tempX[20], tempY[20];

void printLCS(int i, int j)
{
    if (i == 0 || j == 0)
        return;

    if (X[i] == Y[j])
    {
        printLCS(i - 1, j - 1);
        printf("%c", X[i]);
    }
    else if (L[i][j - 1] >= L[i - 1][j])
        printLCS(i, j - 1);
    else
        printLCS(i - 1, j);
}

void LCW(int m, int n)
{
    int i, j;
    for (j = 0; j <= n; j++)
        L[0][j] = 0;
    for (i = 1; i <= m; i++)
        L[i][0] = 0;

    for (i = 1; i <= m; i++)
    {
        for (j = 1; j <= n; j++)
        {
            if (X[i] == Y[j])
                L[i][j] = 1 + L[i - 1][j - 1];
            else if (L[i][j - 1] >= L[i - 1][j])
                L[i][j] = L[i][j - 1];
            else
                L[i][j] = L[i - 1][j];
        }
    }
    printf("\nThe Longest Common Subsequence of length %d is ", L[m][n]);
    printLCS(m, n);
}

int main()
{
    int i, m, n;

    printf("Enter 1st string: ");
    gets(tempX);
    m = strlen(tempX);

    printf("Enter 2nd string: ");
    gets(tempY);
    n = strlen(tempY);

    for (i = 1; i <= m; i++)
    {
        X[i] = tempX[i - 1];
    }

    for (i = 1; i <= n; i++)
    {
        Y[i] = tempY[i - 1];
    }

    LCW(m, n);
    return 0;
}
